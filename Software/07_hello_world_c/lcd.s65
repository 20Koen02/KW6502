E  = %10000000
RW = %01000000
RS = %00100000


    .export _lcd_instruction
    .export _write_lcd
    .export _write_ddra
    .export _write_ddrb

    .code
lcd_wait:
    pha
    lda #%00000000  ; Port B is input
    sta via_ddrb
@lcdbusy:
    lda #RW
    sta via_a
    lda #(RW | E)
    sta via_a
    lda via_b
    and #%10000000
    bne @lcdbusy

    lda #RW
    sta via_a
    lda #%11111111  ; Port B is output
    sta via_ddrb
    pla
    rts

_lcd_instruction:
    jsr lcd_wait
    sta via_b
    lda #0         ; Clear RS/RW/E bits
    sta via_a
    lda #E         ; Set E bit to send instruction
    sta via_a
    lda #0         ; Clear RS/RW/E bits
    sta via_a
    rts

_write_lcd:
    pha
    jsr lcd_wait
    sta via_b
    lda #RS         ; Set RS; Clear RW/E bits
    sta via_a
    lda #(RS | E)   ; Set E bit to send instruction
    sta via_a
    lda #RS         ; Clear E bits
    sta via_a
    pla
    rts

_write_ddra:
    sta via_ddra
    rts

_write_ddrb:
    sta via_ddrb
    rts


.segment "VIA"
    via_b:     .res 1 ; Register "B"
    via_a:     .res 1 ; Register "A"
    via_ddrb:  .res 1 ; Data Direction Register "B"
    via_ddra:  .res 1 ; Data Direction Register "A"
    via_t1c_l: .res 1 ; Read: T1 Low-Order Counter - Write: T1 Low-Order Latches
    via_t1c_h: .res 1 ; T1 High-Order Counter
    via_t1l_l: .res 1 ; T1 Low-Order Latches
    via_t1l_h: .res 1 ; T1 High-Order Latches
    via_t2c_l: .res 1 ; Read: T2 Low-Order Counter - Write: T2 Low-Order Latches
    via_t2c_h: .res 1 ; T2 High-Order Counter
    via_sr:    .res 1 ; Shift Register
    via_acr:   .res 1 ; Auxilary Control Register
    via_pcr:   .res 1 ; Peripheral Control Register
    via_ifr:   .res 1 ; Interrupt Flag Register
    via_ier:   .res 1 ; Interrupt Enable Register
    via_a_noh: .res 1 ; Same as Register "A" (via_a) except no "Handshake"